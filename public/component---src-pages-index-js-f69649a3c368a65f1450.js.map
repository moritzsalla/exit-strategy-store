{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["query","IndexPage","products","data","allShopifyProduct","edges","title","map","product","to","node","handle","key","id","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"2FAAA,sHA6BaA,EAAK,aAuBHC,UA7CG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACGC,kBAAkBC,MAExC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SAEVJ,EAASK,KAAI,SAAAC,GAAO,OACnB,kBAAC,OAAD,CAAMC,GAAID,EAAQE,KAAKC,OAAQC,IAAKJ,EAAQE,KAAKG,IAC9CL,EAAQE,KAAKJ,a,mFCJxB,SAASQ,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMX,EAAS,EAATA,MAC9BY,EADuC,OACvCA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdL,QAEFV,MAAOA,EACPgB,cAAa,QAAUJ,EAAKE,aAAad,MACzCW,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASlB,GAEX,CACEmB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASlB,GAEX,CACEiB,KAAK,sBACLC,QAASL,IAEXQ,OAAOV,KAKfH,EAAIc,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-index-js-f69649a3c368a65f1450.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../layouts/default\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({ data }) => {\n  const products = data.allShopifyProduct.edges\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n\n      {products.map(product => (\n        <Link to={product.node.handle} key={product.node.id}>\n          {product.node.title}\n\n          {/* <Img\n            fluid={product.node.image.localFile.childImageSharp.fluid}\n            key={product.node.image.id}\n            alt={product.node.title}\n          /> */}\n        </Link>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allShopifyProduct {\n      edges {\n        node {\n          title\n          handle\n          id\n          images {\n            localFile {\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s â€“ ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}