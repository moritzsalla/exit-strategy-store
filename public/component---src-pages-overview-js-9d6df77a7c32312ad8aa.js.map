{"version":3,"sources":["webpack:///./src/pages/overview.js","webpack:///./src/components/seo.js"],"names":["List","styled","ul","Item","li","query","SecondPage","products","data","allShopifyProduct","edges","title","map","product","key","node","vendor","priceRange","maxVariantPrice","amount","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"2FAAA,sHAOMA,EAAOC,IAAOC,GAAV,qEAAGD,CAAH,MAEJE,EAAOF,IAAOG,GAAV,qEAAGH,CAAH,MA8BGI,EAAK,aAkBHC,UA9CI,SAAC,GAAc,IAC1BC,EADyB,EAAXC,KACEC,kBAAkBC,MAExC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aAEX,6BAEA,wCAEA,6BAEA,kBAACX,EAAD,KACGO,EAASK,KAAI,SAAAC,GAAO,OACnB,kBAACV,EAAD,CAAMW,IAAKD,EAAQE,KAAKC,QACrBH,EAAQE,KAAKC,OADhB,IAEGH,EAAQE,KAAKJ,MAFhB,MAGGE,EAAQE,KAAKE,WAAWC,gBAAgBC,YAK/C,gC,mFCtBN,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMZ,EAAS,EAATA,MAC9Ba,EADuC,OACvCA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdL,QAEFX,MAAOA,EACPiB,cAAa,QAAUJ,EAAKE,aAAaf,MACzCY,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASnB,GAEX,CACEoB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASnB,GAEX,CACEkB,KAAK,sBACLC,QAASL,IAEXQ,OAAOV,KAKfH,EAAIc,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-overview-js-9d6df77a7c32312ad8aa.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../layouts/default\"\nimport SEO from \"../components/seo\"\n\nconst List = styled.ul``\n\nconst Item = styled.li``\n\nconst SecondPage = ({ data }) => {\n  const products = data.allShopifyProduct.edges\n\n  return (\n    <Layout>\n      <SEO title=\"Overview\" />\n\n      <hr />\n\n      <h1>Overview</h1>\n\n      <hr />\n\n      <List>\n        {products.map(product => (\n          <Item key={product.node.vendor}>\n            {product.node.vendor}&emsp;\n            {product.node.title}&emsp; €\n            {product.node.priceRange.maxVariantPrice.amount}\n          </Item>\n        ))}\n      </List>\n\n      <hr />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query queryVendors {\n    allShopifyProduct {\n      edges {\n        node {\n          vendor\n          title\n          priceRange {\n            maxVariantPrice {\n              amount\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default SecondPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s – ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}